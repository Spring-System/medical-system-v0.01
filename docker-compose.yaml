networks:
  app-tier:
    driver: bridge

services:
  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://0.0.0.0:29092,CONTROLLER://kafka:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"

  publisher-service:
    container_name: publisher-service
    build:
      context: ./publisher-service
      dockerfile: Dockerfile
    environment:
      - BOOTSTRAP_SERVER=kafka:9092
    ports:
      - "8881:8881"
    depends_on:
      - kafka
#      - gateway
  subscriber-service:
    container_name: subscriber-service
    build:
      context: ./subscriber-service
      dockerfile: Dockerfile
    environment:
      - BOOTSTRAP_SERVER=kafka:9092
    ports:
      - "8882:8882"
    depends_on:
      - kafka
#      - gateway

  security-service:
    container_name: security-service
    build:
      context: ./security-service
      dockerfile: Dockerfile
    environment:
      - MYSQL_MEDICAL_SYSTEM=${MYSQL_URL}
    ports:
      - "9000:9000"
    depends_on:
      - kafka
      - gateway
      - subscriber-service
      - publisher-service

  service:
    container_name: service
    build:
      context: ./service
      dockerfile: Dockerfile
    environment:
      - AUTHORIZATION_URI=http://security-service:9000/oauth2/authorize
      - TOKEN_URI=http://security-service:9000/oauth2/token
      - USER_INFO_URI=http://security-service:9000/userinfo
      - JWK_SET_URI=http://security-service:9000/oauth2/jwks
    ports:
      - "8081:8081"
    depends_on:
      - security-service
      - kafka
      - gateway
      - subscriber-service
      - publisher-service

volumes:
  kafka_data:
    driver: local
